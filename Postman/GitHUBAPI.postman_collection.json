{
	"info": {
		"_postman_id": "e68452e4-ca12-4e86-b480-5503d9550214",
		"name": "GitHUBAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32053551",
		"_collection_link": "https://www.postman.com/warped-flare-24315/workspace/apitesting/collection/32053551-e68452e4-ca12-4e86-b480-5503d9550214?action=share&source=collection_link&creator=32053551"
	},
	"item": [
		{
			"name": "CreateaRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = JSON.parse(pm.response.text());\r",
							"pm.environment.set(\"name\",jsondata.name)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Check Repository Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"PostmanAPI\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"node_id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"full_name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"private\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"owner\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"login\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"id\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"node_id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"avatar_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"gravatar_id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"html_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"followers_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"following_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"gists_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"starred_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"subscriptions_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"organizations_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"repos_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"events_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"received_events_url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"type\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"site_admin\": {\r",
							"          \"type\": \"boolean\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"login\",\r",
							"        \"id\",\r",
							"        \"node_id\",\r",
							"        \"avatar_url\",\r",
							"        \"gravatar_id\",\r",
							"        \"url\",\r",
							"        \"html_url\",\r",
							"        \"followers_url\",\r",
							"        \"following_url\",\r",
							"        \"gists_url\",\r",
							"        \"starred_url\",\r",
							"        \"subscriptions_url\",\r",
							"        \"organizations_url\",\r",
							"        \"repos_url\",\r",
							"        \"events_url\",\r",
							"        \"received_events_url\",\r",
							"        \"type\",\r",
							"        \"site_admin\"\r",
							"      ]\r",
							"    },\r",
							"    \"html_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"description\": {},\r",
							"    \"fork\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"forks_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"keys_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"collaborators_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"teams_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"hooks_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"issue_events_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"events_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"assignees_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"branches_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"tags_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"blobs_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"git_tags_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"git_refs_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"trees_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"statuses_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"languages_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"stargazers_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"contributors_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"subscribers_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"subscription_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"commits_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"git_commits_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"comments_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"issue_comment_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"contents_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"compare_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"merges_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"archive_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"downloads_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"issues_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"pulls_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"milestones_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"notifications_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"labels_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"releases_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"deployments_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"created_at\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"updated_at\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"pushed_at\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"git_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"ssh_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"clone_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"svn_url\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"homepage\": {},\r",
							"    \"size\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"stargazers_count\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"watchers_count\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"language\": {},\r",
							"    \"has_issues\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"has_projects\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"has_downloads\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"has_wiki\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"has_pages\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"has_discussions\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"forks_count\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"mirror_url\": {},\r",
							"    \"archived\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"disabled\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"open_issues_count\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"license\": {},\r",
							"    \"allow_forking\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"is_template\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"web_commit_signoff_required\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"topics\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {}\r",
							"    },\r",
							"    \"visibility\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"forks\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"open_issues\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"watchers\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"default_branch\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"permissions\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"admin\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"maintain\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"push\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"triage\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"pull\": {\r",
							"          \"type\": \"boolean\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"admin\",\r",
							"        \"maintain\",\r",
							"        \"push\",\r",
							"        \"triage\",\r",
							"        \"pull\"\r",
							"      ]\r",
							"    },\r",
							"    \"allow_squash_merge\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"allow_merge_commit\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"allow_rebase_merge\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"allow_auto_merge\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"delete_branch_on_merge\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"allow_update_branch\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"use_squash_pr_title_as_default\": {\r",
							"      \"type\": \"boolean\"\r",
							"    },\r",
							"    \"squash_merge_commit_message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"squash_merge_commit_title\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"merge_commit_message\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"merge_commit_title\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"network_count\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"subscribers_count\": {\r",
							"      \"type\": \"number\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"node_id\",\r",
							"    \"name\",\r",
							"    \"full_name\",\r",
							"    \"private\",\r",
							"    \"owner\",\r",
							"    \"html_url\",\r",
							"    \"description\",\r",
							"    \"fork\",\r",
							"    \"url\",\r",
							"    \"forks_url\",\r",
							"    \"keys_url\",\r",
							"    \"collaborators_url\",\r",
							"    \"teams_url\",\r",
							"    \"hooks_url\",\r",
							"    \"issue_events_url\",\r",
							"    \"events_url\",\r",
							"    \"assignees_url\",\r",
							"    \"branches_url\",\r",
							"    \"tags_url\",\r",
							"    \"blobs_url\",\r",
							"    \"git_tags_url\",\r",
							"    \"git_refs_url\",\r",
							"    \"trees_url\",\r",
							"    \"statuses_url\",\r",
							"    \"languages_url\",\r",
							"    \"stargazers_url\",\r",
							"    \"contributors_url\",\r",
							"    \"subscribers_url\",\r",
							"    \"subscription_url\",\r",
							"    \"commits_url\",\r",
							"    \"git_commits_url\",\r",
							"    \"comments_url\",\r",
							"    \"issue_comment_url\",\r",
							"    \"contents_url\",\r",
							"    \"compare_url\",\r",
							"    \"merges_url\",\r",
							"    \"archive_url\",\r",
							"    \"downloads_url\",\r",
							"    \"issues_url\",\r",
							"    \"pulls_url\",\r",
							"    \"milestones_url\",\r",
							"    \"notifications_url\",\r",
							"    \"labels_url\",\r",
							"    \"releases_url\",\r",
							"    \"deployments_url\",\r",
							"    \"created_at\",\r",
							"    \"updated_at\",\r",
							"    \"pushed_at\",\r",
							"    \"git_url\",\r",
							"    \"ssh_url\",\r",
							"    \"clone_url\",\r",
							"    \"svn_url\",\r",
							"    \"homepage\",\r",
							"    \"size\",\r",
							"    \"stargazers_count\",\r",
							"    \"watchers_count\",\r",
							"    \"language\",\r",
							"    \"has_issues\",\r",
							"    \"has_projects\",\r",
							"    \"has_downloads\",\r",
							"    \"has_wiki\",\r",
							"    \"has_pages\",\r",
							"    \"has_discussions\",\r",
							"    \"forks_count\",\r",
							"    \"mirror_url\",\r",
							"    \"archived\",\r",
							"    \"disabled\",\r",
							"    \"open_issues_count\",\r",
							"    \"license\",\r",
							"    \"allow_forking\",\r",
							"    \"is_template\",\r",
							"    \"web_commit_signoff_required\",\r",
							"    \"topics\",\r",
							"    \"visibility\",\r",
							"    \"forks\",\r",
							"    \"open_issues\",\r",
							"    \"watchers\",\r",
							"    \"default_branch\",\r",
							"    \"permissions\",\r",
							"    \"allow_squash_merge\",\r",
							"    \"allow_merge_commit\",\r",
							"    \"allow_rebase_merge\",\r",
							"    \"allow_auto_merge\",\r",
							"    \"delete_branch_on_merge\",\r",
							"    \"allow_update_branch\",\r",
							"    \"use_squash_pr_title_as_default\",\r",
							"    \"squash_merge_commit_message\",\r",
							"    \"squash_merge_commit_title\",\r",
							"    \"merge_commit_message\",\r",
							"    \"merge_commit_title\",\r",
							"    \"network_count\",\r",
							"    \"subscribers_count\"\r",
							"  ]\r",
							"}\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"PostmanAPI\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Check Repository Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"JavaPrograms_16\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.github+json"
					},
					{
						"key": "Authorization",
						"value": "Bearer <YOUR-TOKEN>"
					},
					{
						"key": "X-GitHub-Api-Version",
						"value": "2022-11-28"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/Ukhattar/JavaPrograms_16",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Ukhattar",
						"JavaPrograms_16"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/users/Ukhattar/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						"Ukhattar",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateRepoName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"PostmanAPIProject\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"PostmanAPIProject\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/Ukhattar/PostmanAPI",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Ukhattar",
						"PostmanAPI"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleterepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the response status code is 204 (No Content)\r",
							"tests[\"Verify DELETE request returns status code 204\"] = responseCode.code === 204;\r",
							"\r",
							"// If the status code is not 204, log an error\r",
							"if (!tests[\"Verify DELETE request returns status code 204\"]) {\r",
							"    console.error(\"Expected status code 204, but got: \" + responseCode.code);\r",
							"}\r",
							"\r",
							"// Check if the response body is empty\r",
							"tests[\"Verify DELETE request response is empty\"] = responseBody === \"\";\r",
							"\r",
							"// If the response body is not empty, log an error\r",
							"if (!tests[\"Verify DELETE request response is empty\"]) {\r",
							"    console.error(\"Expected empty response body, but got: \" + responseBody);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.environment.unset(\"name\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/Ukhattar/PostmanAPI",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Ukhattar",
						"PostmanAPI"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleterepow/oAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.unset(\"name\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/Ukhattar/PostmanAPI",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"Ukhattar",
						"PostmanAPI"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "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",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}